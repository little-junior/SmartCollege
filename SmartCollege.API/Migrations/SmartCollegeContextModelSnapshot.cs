// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartCollege.API.Data;

#nullable disable

namespace SmartCollege.API.Migrations
{
    [DbContext(typeof(SmartCollegeContext))]
    partial class SmartCollegeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.27");

            modelBuilder.Entity("SmartCollege.API.Models.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CursoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Semestre")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("Alunos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cpf = "111.222.333-44",
                            CursoId = 1,
                            DataNascimento = new DateTime(2000, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "joao@email.com",
                            Nome = "João",
                            Semestre = 1,
                            Sobrenome = "Silva",
                            Telefone = "9999-8888"
                        },
                        new
                        {
                            Id = 2,
                            Cpf = "222.333.444-55",
                            CursoId = 2,
                            DataNascimento = new DateTime(1999, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "maria@email.com",
                            Nome = "Maria",
                            Semestre = 2,
                            Sobrenome = "Santos",
                            Telefone = "7777-6666"
                        },
                        new
                        {
                            Id = 3,
                            Cpf = "333.444.555-66",
                            CursoId = 3,
                            DataNascimento = new DateTime(2001, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "pedro@email.com",
                            Nome = "Pedro",
                            Semestre = 1,
                            Sobrenome = "Oliveira",
                            Telefone = "5555-4444"
                        },
                        new
                        {
                            Id = 4,
                            Cpf = "444.555.666-77",
                            CursoId = 4,
                            DataNascimento = new DateTime(2002, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ana@email.com",
                            Nome = "Ana",
                            Semestre = 2,
                            Sobrenome = "Pereira",
                            Telefone = "3333-2222"
                        },
                        new
                        {
                            Id = 5,
                            Cpf = "555.666.777-88",
                            CursoId = 5,
                            DataNascimento = new DateTime(2003, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lucas@email.com",
                            Nome = "Lucas",
                            Semestre = 1,
                            Sobrenome = "Costa",
                            Telefone = "1111-0000"
                        });
                });

            modelBuilder.Entity("SmartCollege.API.Models.AlunoDisciplina", b =>
                {
                    b.Property<int>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AlunoId", "DisciplinaId");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("AlunosDisciplinas");

                    b.HasData(
                        new
                        {
                            AlunoId = 1,
                            DisciplinaId = 1
                        },
                        new
                        {
                            AlunoId = 1,
                            DisciplinaId = 5
                        },
                        new
                        {
                            AlunoId = 2,
                            DisciplinaId = 2
                        },
                        new
                        {
                            AlunoId = 3,
                            DisciplinaId = 2
                        },
                        new
                        {
                            AlunoId = 4,
                            DisciplinaId = 4
                        },
                        new
                        {
                            AlunoId = 5,
                            DisciplinaId = 1
                        });
                });

            modelBuilder.Entity("SmartCollege.API.Models.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Modalidade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Periodo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Modalidade = 1,
                            Nome = "Engenharia",
                            Periodo = 1
                        },
                        new
                        {
                            Id = 2,
                            Modalidade = 1,
                            Nome = "Administração",
                            Periodo = 2
                        },
                        new
                        {
                            Id = 3,
                            Modalidade = 1,
                            Nome = "Direito",
                            Periodo = 3
                        },
                        new
                        {
                            Id = 4,
                            Modalidade = 1,
                            Nome = "Medicina",
                            Periodo = 1
                        },
                        new
                        {
                            Id = 5,
                            Modalidade = 1,
                            Nome = "Ciência da Computação",
                            Periodo = 3
                        });
                });

            modelBuilder.Entity("SmartCollege.API.Models.CursoDisciplina", b =>
                {
                    b.Property<int>("CursoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CursoId", "DisciplinaId");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("CursosDisciplinas");

                    b.HasData(
                        new
                        {
                            CursoId = 1,
                            DisciplinaId = 1
                        },
                        new
                        {
                            CursoId = 1,
                            DisciplinaId = 5
                        },
                        new
                        {
                            CursoId = 2,
                            DisciplinaId = 2
                        },
                        new
                        {
                            CursoId = 3,
                            DisciplinaId = 2
                        },
                        new
                        {
                            CursoId = 4,
                            DisciplinaId = 4
                        },
                        new
                        {
                            CursoId = 5,
                            DisciplinaId = 1
                        },
                        new
                        {
                            CursoId = 5,
                            DisciplinaId = 3
                        });
                });

            modelBuilder.Entity("SmartCollege.API.Models.Disciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Periodo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Sala")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Disciplinas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Cálculo I",
                            Periodo = 1,
                            ProfessorId = 1,
                            Sala = "Sala A"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Retórica e Humanidades",
                            Periodo = 2,
                            ProfessorId = 2,
                            Sala = "Sala B"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Programação Orientada a Objetos",
                            Periodo = 3,
                            ProfessorId = 3,
                            Sala = "Sala C"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Biologia Celular",
                            Periodo = 1,
                            ProfessorId = 4,
                            Sala = "Sala D"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Química I",
                            Periodo = 2,
                            ProfessorId = 5,
                            Sala = "Sala E"
                        });
                });

            modelBuilder.Entity("SmartCollege.API.Models.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Professores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cpf = "123.456.789-01",
                            DataNascimento = new DateTime(1970, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lauro@email.com",
                            Nome = "Lauro",
                            Sobrenome = "Silva"
                        },
                        new
                        {
                            Id = 2,
                            Cpf = "987.654.321-09",
                            DataNascimento = new DateTime(1985, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "roberto@email.com",
                            Nome = "Roberto",
                            Sobrenome = "Almeida"
                        },
                        new
                        {
                            Id = 3,
                            Cpf = "456.789.012-34",
                            DataNascimento = new DateTime(1980, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ronaldo@email.com",
                            Nome = "Ronaldo",
                            Sobrenome = "Souza"
                        },
                        new
                        {
                            Id = 4,
                            Cpf = "654.321.098-76",
                            DataNascimento = new DateTime(1975, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "rodrigo@email.com",
                            Nome = "Rodrigo",
                            Sobrenome = "Oliveira"
                        },
                        new
                        {
                            Id = 5,
                            Cpf = "789.012.345-67",
                            DataNascimento = new DateTime(1990, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alexandre@email.com",
                            Nome = "Alexandre",
                            Sobrenome = "Ferreira"
                        });
                });

            modelBuilder.Entity("SmartCollege.API.Models.Aluno", b =>
                {
                    b.HasOne("SmartCollege.API.Models.Curso", "Curso")
                        .WithMany("Alunos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("SmartCollege.API.Models.AlunoDisciplina", b =>
                {
                    b.HasOne("SmartCollege.API.Models.Aluno", "Aluno")
                        .WithMany("AlunosDisciplinas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartCollege.API.Models.Disciplina", "Disciplina")
                        .WithMany("AlunosDisciplinas")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Disciplina");
                });

            modelBuilder.Entity("SmartCollege.API.Models.CursoDisciplina", b =>
                {
                    b.HasOne("SmartCollege.API.Models.Curso", "Curso")
                        .WithMany("CursosDisciplinas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartCollege.API.Models.Disciplina", "Disciplina")
                        .WithMany("CursosDisciplinas")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Disciplina");
                });

            modelBuilder.Entity("SmartCollege.API.Models.Disciplina", b =>
                {
                    b.HasOne("SmartCollege.API.Models.Professor", "Professor")
                        .WithMany("Disciplinas")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("SmartCollege.API.Models.Aluno", b =>
                {
                    b.Navigation("AlunosDisciplinas");
                });

            modelBuilder.Entity("SmartCollege.API.Models.Curso", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("CursosDisciplinas");
                });

            modelBuilder.Entity("SmartCollege.API.Models.Disciplina", b =>
                {
                    b.Navigation("AlunosDisciplinas");

                    b.Navigation("CursosDisciplinas");
                });

            modelBuilder.Entity("SmartCollege.API.Models.Professor", b =>
                {
                    b.Navigation("Disciplinas");
                });
#pragma warning restore 612, 618
        }
    }
}
